"""
Django settings for Next_App project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-%3b#t835x-m&1e4g2mqy22zmcb*&k8qfl*+y0==7tfit1=(l7w"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django_daisy',
    'rest_framework',
    "django.contrib.admin",
    'django.contrib.humanize',  # Required for django-daisy
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "authentication",
    # 'rest_framework.authtoken',  
    # 'testapp',
    'corsheaders',

    'userapp',
    'partnerapp',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',  # Add this for token blacklisting
    'drf_yasg',
    'adminapp',
    'django_otp',
    'django_otp.plugins.otp_totp',
    'silk'
]

# Login/logout URLs
# LOGIN_URL = '/adminapp/login/'  # Redirect here when login_required fails
# LOGIN_REDIRECT_URL = '/adminapp/'  # Redirect here after successful login
# LOGOUT_REDIRECT_URL = '/adminapp/login/'  # Redirect here after logout

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    "django.middleware.security.SecurityMiddleware",
    'whitenoise.middleware.WhiteNoiseMiddleware',
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    'silk.middleware.SilkyMiddleware',
    'django_otp.middleware.OTPMiddleware',

    'adminapp.middleware.AdminOnlySilkMiddleware',

    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True



ROOT_URLCONF = "Next_App.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                
                'adminapp.context_processors.stuck_paid_notifications',

            ],
        },
    },
]

WSGI_APPLICATION = "Next_App.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }

import dj_database_url
import os

#  test render db
DATABASES = {
    "default": dj_database_url.config(
        default="postgresql://next_app_db_user:ZWWNS9lPh4wyeBUKi2FBKyRuT9VFoKTI@dpg-d13869be5dus73egi0gg-a.oregon-postgres.render.com/next_app_db"
    )
}



# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.postgresql",
#         "NAME": "your_db",
#         "USER": "your_user",
#         "PASSWORD": "your_password",
#         "HOST": "db",  # matches the service name in docker-compose
#         "PORT": "5432",
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

# Timezone for Kerala (Indian Standard Time)
TIME_ZONE = 'Asia/Kolkata'  # Kerala is in Indian Standard Time (IST), which is UTC+5:30

# Language code (for English)
LANGUAGE_CODE = 'en-us'

# Use internationalization (i18n) for language support
USE_I18N = True

# Enable timezone-aware datetimes
USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


import os

# Base directory
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Static files settings
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media files settings
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


AUTH_USER_MODEL = 'authentication.CustomUser'

ALLOWED_HOSTS = [
    'localhost',  # Include any other trusted domains
    'https://*.ngrok-free.app',  # Wildcard for ngrok-free.app
    '127.0.0.1',
    '.ngrok-free.app',
    'nextapp-api.onrender.com',
    'nextapp-api-production.up.railway.app'
]


import re

CSRF_TRUSTED_ORIGINS = [
    'https://*.ngrok-free.app',  # Wildcard for ngrok-free.app
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}


# JWT settings
from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=600),
    # 'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=360),

    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': '123',  # Replace with a secure key in production
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'JWK_URL': None,
    'LEEWAY': 0,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

#aishwarya test keys
# RAZORPAY_KEY_ID = 'rzp_test_YkCy6jA2GFlk5F'
# RAZORPAY_KEY_SECRET = 'daOhxZJLVM1ShIlgGtZdLHYt'
# RAZORPAY_WEBHOOK_SECRET = 'zaza12345'

#dipson test keys
RAZORPAY_KEY_ID = 'rzp_test_H3iU2QYL4yxmrj'
RAZORPAY_KEY_SECRET = 'V56b2SPqb9p7EszScPYfScfO'
RAZORPAY_WEBHOOK_SECRET = 'zaza12345'

#dipson live keys
# RAZORPAY_KEY_ID = 'rzp_live_ersFQ1AdufeSU9'
# RAZORPAY_KEY_SECRET = 'V56b2SPqb9p7EszScPYfScfO'
# RAZORPAY_WEBHOOK_SECRET = 'zaza12345'


DAISY_SETTINGS = {
    'SITE_TITLE': 'Health Connect Admin',  # The title of the site 
    'SITE_HEADER': 'Health Connect Admin',  # Header text displayed in the admin panel
    'INDEX_TITLE': 'Hi, welcome to your dashboard',  # The title for the index page of dashboard
    'SITE_LOGO': '/media/logo.png',  # Path to the logo image displayed in the sidebar
    'EXTRA_STYLES': [],  # List of extra stylesheets to be loaded in base.html (optional)
    'EXTRA_SCRIPTS': [],  # List of extra script URLs to be loaded in base.html (optional)
    'LOAD_FULL_STYLES': False,  # If True, loads full DaisyUI components in the admin (useful if you have custom template overrides)
    'SHOW_CHANGELIST_FILTER': False,  # If True, the filter sidebar will open by default on changelist views
    'DONT_SUPPORT_ME': True, # Hide github link in sidebar footer
    'SIDEBAR_FOOTNOTE': '', # add footnote to sidebar
    'APPS_REORDER': {
        # Custom configurations for third-party apps that can't be modified directly in their `apps.py`
        'auth': {
            'icon': 'fa-solid fa-person-military-pointing',  # FontAwesome icon for the 'auth' app
            'name': 'Authentication',  # Custom name for the 'auth' app
            'hide': True,  # Whether to hide the 'auth' app from the sidebar (set to True to hide)
            'divider_title': "Auth",  # Divider title for the 'auth' section
        },
        'social_django': {
            'icon': 'fa-solid fa-users-gear',  # Custom FontAwesome icon for the 'social_django' app
        },
    },
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

from corsheaders.defaults import default_headers


CORS_ALLOW_HEADERS = list(default_headers) + [
    'ngrok-skip-browser-warning',
]

# for test railway rabbitmq

CELERY_BROKER_URL = 'amqp://MoQWWpOq1hwPzU6Y:yEmLK-sqHpFdR~cCvYQngcE_D4FxsYA3@trolley.proxy.rlwy.net:15201'
CELERY_RESULT_BACKEND = 'rpc://'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'

# for docker rabbit mq

# CELERY_BROKER_URL = "amqp://user:password@rabbitmq:5672//"
# CELERY_RESULT_BACKEND = "rpc://"
# CELERY_ACCEPT_CONTENT = ["json"]
# CELERY_TASK_SERIALIZER = "json"
# CELERY_TIMEZONE = "UTC"


# DEFAULT_FROM_EMAIL = 'no-reply@yourdomain.com'
# ADMIN_EMAIL = 'admin@yourdomain.com'  # or use multiple emails if needed
